https://www.geeksforgeeks.org/problems/alien-dictionary/1

class Solution {
    public String findOrder(String[] dict, int n, int k) {
        List<List<Integer>> adj = new ArrayList<>();
        for(int i=0; i<k; i++){
            adj.add(new ArrayList<>());
        }
        
        int indegree[] = new int[k];
        
        for(int i=0; i<dict.length-1; i++){
            String s1 = dict[i];
            String s2 = dict[i+1];
            int j=0;
            while(j < s1.length() && j < s2.length() 
                    && s1.charAt(j) == s2.charAt(j)){
                j++;
            }
            if(j == s1.length() || j == s2.length()){
                continue;
            }
            int u = s1.charAt(j)-'a';
            int v = s2.charAt(j)-'a';
            adj.get(u).add(v);
            indegree[v]++;
        }
        
        Queue<Integer> q = new LinkedList<>();
        for(int i=0; i<k; i++){
            if(indegree[i] == 0){
                q.offer(i);
            }
        }
        
        StringBuilder sb = new StringBuilder();
        
        while(!q.isEmpty()){
            int u = q.poll();
            sb.append((char)('a'+u));
            for(int nei: adj.get(u)){
                indegree[nei]--;
                if(indegree[nei] == 0){
                    q.offer(nei);
                }
            }
        }
        return sb.length() == k ? sb.toString() : "";
    }
}
